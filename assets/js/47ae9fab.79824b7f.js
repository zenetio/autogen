"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6535],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=r,h=m["".concat(s,".").concat(d)]||m[d]||c[d]||a;return n?o.createElement(h,i(i({ref:t},p),{},{components:n})):o.createElement(h,i({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5031:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var o=n(3117),r=(n(7294),n(3905));const a={},i="Contributing",l={unversionedId:"Contribute",id:"Contribute",isDocsHomePage:!1,title:"Contributing",description:"This project welcomes and encourages all forms of contributions, including but not limited to:",source:"@site/docs/Contribute.md",sourceDirName:".",slug:"/Contribute",permalink:"/autogen/docs/Contribute",editUrl:"https://github.com/microsoft/autogen/edit/main/website/docs/Contribute.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Enhanced Inference",permalink:"/autogen/docs/Use-Cases/enhanced_inference"},next:{title:"Research",permalink:"/autogen/docs/Research"}},s=[{value:"How to make a good bug report",id:"how-to-make-a-good-bug-report",children:[],level:2},{value:"Becoming a Reviewer",id:"becoming-a-reviewer",children:[],level:2},{value:"Guidance for Maintainers",id:"guidance-for-maintainers",children:[{value:"General",id:"general",children:[],level:3},{value:"Pull Requests",id:"pull-requests",children:[],level:3},{value:"Issues and Discussions",id:"issues-and-discussions",children:[],level:3}],level:2},{value:"Developing",id:"developing",children:[{value:"Setup",id:"setup",children:[],level:3},{value:"Docker",id:"docker",children:[],level:3},{value:"Develop in Remote Container",id:"develop-in-remote-container",children:[],level:3},{value:"Pre-commit",id:"pre-commit",children:[],level:3},{value:"Write tests",id:"write-tests",children:[{value:"Run non-OpenAI tests",id:"run-non-openai-tests",children:[],level:4}],level:3},{value:"Coverage",id:"coverage",children:[],level:3},{value:"Documentation",id:"documentation",children:[],level:3}],level:2}],u={toc:s};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"contributing"},"Contributing"),(0,r.kt)("p",null,"This project welcomes and encourages all forms of contributions, including but not limited to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Pushing patches."),(0,r.kt)("li",{parentName:"ul"},"Code review of pull requests."),(0,r.kt)("li",{parentName:"ul"},"Documentation, examples and test cases."),(0,r.kt)("li",{parentName:"ul"},"Readability improvement, e.g., improvement on docstr and comments."),(0,r.kt)("li",{parentName:"ul"},"Community participation in ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/microsoft/autogen/issues"},"issues"),", ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/microsoft/autogen/discussions"},"discussions"),", ",(0,r.kt)("a",{parentName:"li",href:"https://discord.gg/pAbnFJrkgZ"},"discord"),", and ",(0,r.kt)("a",{parentName:"li",href:"https://twitter.com/pyautogen"},"twitter"),"."),(0,r.kt)("li",{parentName:"ul"},"Tutorials, blog posts, talks that promote the project."),(0,r.kt)("li",{parentName:"ul"},"Sharing application scenarios and/or related research.")),(0,r.kt)("p",null,"Most contributions require you to agree to a\nContributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us\nthe rights to use your contribution. For details, visit ",(0,r.kt)("a",{parentName:"p",href:"https://cla.opensource.microsoft.com"},"https://cla.opensource.microsoft.com"),"."),(0,r.kt)("p",null,"If you are new to GitHub ",(0,r.kt)("a",{parentName:"p",href:"https://help.github.com/categories/collaborating-with-issues-and-pull-requests/"},"here")," is a detailed help source on getting involved with development on GitHub."),(0,r.kt)("p",null,"When you submit a pull request, a CLA bot will automatically determine whether you need to provide\na CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions\nprovided by the bot. You will only need to do this once across all repos using our CLA."),(0,r.kt)("p",null,"This project has adopted the ",(0,r.kt)("a",{parentName:"p",href:"https://opensource.microsoft.com/codeofconduct/"},"Microsoft Open Source Code of Conduct"),".\nFor more information see the ",(0,r.kt)("a",{parentName:"p",href:"https://opensource.microsoft.com/codeofconduct/faq/"},"Code of Conduct FAQ")," or\ncontact ",(0,r.kt)("a",{parentName:"p",href:"mailto:opencode@microsoft.com"},"opencode@microsoft.com")," with any additional questions or comments."),(0,r.kt)("h2",{id:"how-to-make-a-good-bug-report"},"How to make a good bug report"),(0,r.kt)("p",null,"When you submit an issue to ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/microsoft/autogen/issues"},"GitHub"),", please do your best to\nfollow these guidelines! This will make it a lot easier to provide you with good\nfeedback:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The ideal bug report contains a short reproducible code snippet. This way\nanyone can try to reproduce the bug easily (see ",(0,r.kt)("a",{parentName:"p",href:"https://stackoverflow.com/help/mcve"},"this")," for more details). If your snippet is\nlonger than around 50 lines, please link to a ",(0,r.kt)("a",{parentName:"p",href:"https://gist.github.com"},"gist")," or a GitHub repo.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"If an exception is raised, please ",(0,r.kt)("strong",{parentName:"p"},"provide the full traceback"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Please include your ",(0,r.kt)("strong",{parentName:"p"},"operating system type and version number"),", as well as\nyour ",(0,r.kt)("strong",{parentName:"p"},"Python, autogen, scikit-learn versions"),". The version of autogen\ncan be found by running the following code snippet:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import autogen\nprint(autogen.__version__)\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Please ensure all ",(0,r.kt)("strong",{parentName:"li"},"code snippets and error messages are formatted in\nappropriate code blocks"),".  See ",(0,r.kt)("a",{parentName:"li",href:"https://help.github.com/articles/creating-and-highlighting-code-blocks"},"Creating and highlighting code blocks"),"\nfor more details.")),(0,r.kt)("h2",{id:"becoming-a-reviewer"},"Becoming a Reviewer"),(0,r.kt)("p",null,"There is currently no formal reviewer solicitation process. Current reviewers identify reviewers from active contributors. If you are willing to become a reviewer, you are welcome to let us know on discord."),(0,r.kt)("h2",{id:"guidance-for-maintainers"},"Guidance for Maintainers"),(0,r.kt)("h3",{id:"general"},"General"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Be a member of the community and treat everyone as a member. Be inclusive."),(0,r.kt)("li",{parentName:"ul"},"Help each other and encourage mutual help."),(0,r.kt)("li",{parentName:"ul"},"Actively post and respond."),(0,r.kt)("li",{parentName:"ul"},"Keep open communication.")),(0,r.kt)("h3",{id:"pull-requests"},"Pull Requests"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For new PR, decide whether to close without review. If not, find the right reviewers. The default reviewer is microsoft/autogen. Ask users who can benefit from the PR to review it."),(0,r.kt)("li",{parentName:"ul"},"For old PR, check the blocker: reviewer or PR creator. Try to unblock. Get additional help when needed."),(0,r.kt)("li",{parentName:"ul"},"When requesting changes, make sure you can check back in time because it blocks merging."),(0,r.kt)("li",{parentName:"ul"},"Make sure all the checks are passed."),(0,r.kt)("li",{parentName:"ul"},"For changes that require running OpenAI tests, make sure the OpenAI tests pass too. Running these tests requires approval."),(0,r.kt)("li",{parentName:"ul"},"In general, suggest small PRs instead of a giant PR."),(0,r.kt)("li",{parentName:"ul"},"For documentation change, request snapshot of the compiled website, or compile by yourself to verify the format."),(0,r.kt)("li",{parentName:"ul"},"For new contributors who have not signed the contributing agreement, remind them to sign before reviewing."),(0,r.kt)("li",{parentName:"ul"},"For multiple PRs which may have conflict, coordinate them to figure out the right order."),(0,r.kt)("li",{parentName:"ul"},"Pay special attention to:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Breaking changes. Don\u2019t make breaking changes unless necessary. Don\u2019t merge to main until enough headsup is provided and a new release is ready."),(0,r.kt)("li",{parentName:"ul"},"Test coverage decrease."),(0,r.kt)("li",{parentName:"ul"},"Changes that may cause performance degradation. Do regression test when test suites are available."),(0,r.kt)("li",{parentName:"ul"},"Discourage ",(0,r.kt)("strong",{parentName:"li"},"change to the core library")," when there is an alternative.")))),(0,r.kt)("h3",{id:"issues-and-discussions"},"Issues and Discussions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For new issues, write a reply, apply a label if relevant. Ask on discord when necessary. For roadmap issues, add to the roadmap project and encourage community discussion. Mention relevant experts when necessary."),(0,r.kt)("li",{parentName:"ul"},"For old issues, provide an update or close. Ask on discord when necessary. Encourage PR creation when relevant."),(0,r.kt)("li",{parentName:"ul"},"Use \u201cgood first issue\u201d for easy fix suitable for first-time contributors."),(0,r.kt)("li",{parentName:"ul"},"Use \u201ctask list\u201d for issues that require multiple PRs."),(0,r.kt)("li",{parentName:"ul"},"For discussions, create an issue when relevant. Discuss on discord when appropriate.")),(0,r.kt)("h2",{id:"developing"},"Developing"),(0,r.kt)("h3",{id:"setup"},"Setup"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/microsoft/autogen.git\npip install -e autogen\n")),(0,r.kt)("h3",{id:"docker"},"Docker"),(0,r.kt)("p",null,"We provide a simple ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/microsoft/autogen/blob/main/Dockerfile"},"Dockerfile"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker build https://github.com/microsoft/autogen.git#main -t autogen-dev\ndocker run -it autogen-dev\n")),(0,r.kt)("h3",{id:"develop-in-remote-container"},"Develop in Remote Container"),(0,r.kt)("p",null,"If you use vscode, you can open the autogen folder in a ",(0,r.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/docs/remote/containers"},"Container"),".\nWe have provided the configuration in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/microsoft/autogen/blob/main/.devcontainer"},"devcontainer"),". They can be used in GitHub codespace too. Developing AutoGen in dev containers is recommended."),(0,r.kt)("h3",{id:"pre-commit"},"Pre-commit"),(0,r.kt)("p",null,"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"pre-commit install")," to install pre-commit into your git hooks. Before you commit, run\n",(0,r.kt)("inlineCode",{parentName:"p"},"pre-commit run")," to check if you meet the pre-commit requirements. If you use Windows (without WSL) and can't commit after installing pre-commit, you can run ",(0,r.kt)("inlineCode",{parentName:"p"},"pre-commit uninstall")," to uninstall the hook. In WSL or Linux this is supposed to work."),(0,r.kt)("h3",{id:"write-tests"},"Write tests"),(0,r.kt)("p",null,"Tests are automatically run via GitHub actions. There are two workflows:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/microsoft/autogen/blob/main/.github/workflows/build.yml"},"build.yml")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/microsoft/autogen/blob/main/.github/workflows/openai.yml"},"openai.yml"))),(0,r.kt)("p",null,"The first workflow is required to pass for all PRs (and it doesn't do any OpenAI calls). The second workflow is required for changes that affect the OpenAI tests (and does actually call LLM). The second workflow requires approval to run. When writing tests that require OpenAI calls, please use ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/microsoft/autogen/blob/b1adac515931bf236ac59224269eeec683a162ba/test/oai/test_client.py#L19"},(0,r.kt)("inlineCode",{parentName:"a"},"pytest.mark.skipif"))," to make them run in only when ",(0,r.kt)("inlineCode",{parentName:"p"},"openai")," package is installed. If additional dependency for this test is required, install the dependency in the corresponding python version in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/microsoft/autogen/blob/main/.github/workflows/openai.yml"},"openai.yml"),"."),(0,r.kt)("h4",{id:"run-non-openai-tests"},"Run non-OpenAI tests"),(0,r.kt)("p",null,"To run the subset of the tests not depending on ",(0,r.kt)("inlineCode",{parentName:"p"},"openai")," (and not calling LLMs)):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Install pytest:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"pip install pytest\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Run the tests from the ",(0,r.kt)("inlineCode",{parentName:"li"},"test")," folder using the ",(0,r.kt)("inlineCode",{parentName:"li"},"--skip-openai")," flag.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"pytest test --skip-openai\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Make sure all tests pass, this is required for ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/microsoft/autogen/blob/main/.github/workflows/build.yml"},"build.yml")," checks to pass")),(0,r.kt)("h3",{id:"coverage"},"Coverage"),(0,r.kt)("p",null,"Any code you commit should not decrease coverage. To run all unit tests, install the ","[test]"," option:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'pip install -e."[test]"\ncoverage run -m pytest test\n')),(0,r.kt)("p",null,"Then you can see the coverage report by\n",(0,r.kt)("inlineCode",{parentName:"p"},"coverage report -m")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"coverage html"),"."),(0,r.kt)("h3",{id:"documentation"},"Documentation"),(0,r.kt)("p",null,"To build and test documentation locally, install ",(0,r.kt)("a",{parentName:"p",href:"https://nodejs.org/en/download/"},"Node.js"),". For example,"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nvm install --lts\n")),(0,r.kt)("p",null,"Then:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"npm install --global yarn  # skip if you use the dev container we provided\npip install pydoc-markdown  # skip if you use the dev container we provided\ncd website\nyarn install --frozen-lockfile --ignore-engines\npydoc-markdown\nyarn start\n")),(0,r.kt)("p",null,"The last command starts a local development server and opens up a browser window.\nMost changes are reflected live without having to restart the server."),(0,r.kt)("p",null,"Note:\nsome tips in this guide are based off the contributor guide from ",(0,r.kt)("a",{parentName:"p",href:"https://microsoft.github.io/FLAML/docs/Contribute"},"flaml"),"."))}p.isMDXComponent=!0}}]);