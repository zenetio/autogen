"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8603],{3905:(e,t,a)=>{a.d(t,{Zo:()=>i,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),c=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},i=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,i=o(e,["components","mdxType","originalType","parentName"]),g=c(a),h=r,m=g["".concat(p,".").concat(h)]||g[h]||u[h]||l;return a?n.createElement(m,s(s({ref:t},i),{},{components:a})):n.createElement(m,s({ref:t},i))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,s=new Array(l);s[0]=g;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var c=2;c<l;c++)s[c]=a[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},3927:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>s,default:()=>i,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(3117),r=(a(7294),a(3905));const l={sidebar_label:"groupchat",title:"agentchat.groupchat"},s=void 0,o={unversionedId:"reference/agentchat/groupchat",id:"reference/agentchat/groupchat",isDocsHomePage:!1,title:"agentchat.groupchat",description:"GroupChat Objects",source:"@site/docs/reference/agentchat/groupchat.md",sourceDirName:"reference/agentchat",slug:"/reference/agentchat/groupchat",permalink:"/autogen/docs/reference/agentchat/groupchat",editUrl:"https://github.com/microsoft/autogen/edit/main/website/docs/reference/agentchat/groupchat.md",tags:[],version:"current",frontMatter:{sidebar_label:"groupchat",title:"agentchat.groupchat"},sidebar:"referenceSideBar",previous:{title:"conversable_agent",permalink:"/autogen/docs/reference/agentchat/conversable_agent"},next:{title:"user_proxy_agent",permalink:"/autogen/docs/reference/agentchat/user_proxy_agent"}},p=[{value:"GroupChat Objects",id:"groupchat-objects",children:[{value:"agent_names",id:"agent_names",children:[],level:4},{value:"reset",id:"reset",children:[],level:4},{value:"append",id:"append",children:[],level:4},{value:"agent_by_name",id:"agent_by_name",children:[],level:4},{value:"next_agent",id:"next_agent",children:[],level:4},{value:"select_speaker_msg",id:"select_speaker_msg",children:[],level:4},{value:"select_speaker_prompt",id:"select_speaker_prompt",children:[],level:4},{value:"manual_select_speaker",id:"manual_select_speaker",children:[],level:4},{value:"select_speaker",id:"select_speaker",children:[],level:4},{value:"a_select_speaker",id:"a_select_speaker",children:[],level:4}],level:2},{value:"GroupChatManager Objects",id:"groupchatmanager-objects",children:[{value:"run_chat",id:"run_chat",children:[],level:4},{value:"a_run_chat",id:"a_run_chat",children:[],level:4}],level:2}],c={toc:p};function i(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"groupchat-objects"},"GroupChat Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"@dataclass\nclass GroupChat()\n")),(0,r.kt)("p",null,"(In preview) A group chat class that contains the following data fields:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"agents: a list of participating agents."),(0,r.kt)("li",{parentName:"ul"},"messages: a list of messages in the group chat."),(0,r.kt)("li",{parentName:"ul"},"max_round: the maximum number of rounds."),(0,r.kt)("li",{parentName:"ul"},'admin_name: the name of the admin agent if there is one. Default is "Admin".\nKeyBoardInterrupt will make the admin agent take over.'),(0,r.kt)("li",{parentName:"ul"},"func_call_filter: whether to enforce function call filter. Default is True.\nWhen set to True and when a message is a function call suggestion,\nthe next speaker will be chosen from an agent which contains the corresponding function name\nin its ",(0,r.kt)("inlineCode",{parentName:"li"},"function_map"),"."),(0,r.kt)("li",{parentName:"ul"},'speaker_selection_method: the method for selecting the next speaker. Default is "auto".\nCould be any of the following (case insensitive), will raise ValueError if not recognized:',(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},'"auto": the next speaker is selected automatically by LLM.'),(0,r.kt)("li",{parentName:"ul"},'"manual": the next speaker is selected manually by user input.'),(0,r.kt)("li",{parentName:"ul"},'"random": the next speaker is selected randomly.'),(0,r.kt)("li",{parentName:"ul"},'"round_robin": the next speaker is selected in a round robin fashion, i.e., iterating in the same order as provided in ',(0,r.kt)("inlineCode",{parentName:"li"},"agents"),"."))),(0,r.kt)("li",{parentName:"ul"},"allow_repeat_speaker: whether to allow the same speaker to speak consecutively. Default is True, in which case all speakers are allowed to speak consecutively. If allow_repeat_speaker is a list of Agents, then only those listed agents are allowed to repeat. If set to False, then no speakers are allowed to repeat.")),(0,r.kt)("h4",{id:"agent_names"},"agent","_","names"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"@property\ndef agent_names() -> List[str]\n")),(0,r.kt)("p",null,"Return the names of the agents in the group chat."),(0,r.kt)("h4",{id:"reset"},"reset"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def reset()\n")),(0,r.kt)("p",null,"Reset the group chat."),(0,r.kt)("h4",{id:"append"},"append"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def append(message: Dict)\n")),(0,r.kt)("p",null,"Append a message to the group chat.\nWe cast the content to str here so that it can be managed by text-based\nmodel."),(0,r.kt)("h4",{id:"agent_by_name"},"agent","_","by","_","name"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def agent_by_name(name: str) -> Agent\n")),(0,r.kt)("p",null,"Returns the agent with a given name."),(0,r.kt)("h4",{id:"next_agent"},"next","_","agent"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def next_agent(agent: Agent, agents: Optional[List[Agent]] = None) -> Agent\n")),(0,r.kt)("p",null,"Return the next agent in the list."),(0,r.kt)("h4",{id:"select_speaker_msg"},"select","_","speaker","_","msg"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def select_speaker_msg(agents: Optional[List[Agent]] = None) -> str\n")),(0,r.kt)("p",null,"Return the system message for selecting the next speaker. This is always the ",(0,r.kt)("em",{parentName:"p"},"first")," message in the context."),(0,r.kt)("h4",{id:"select_speaker_prompt"},"select","_","speaker","_","prompt"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def select_speaker_prompt(agents: Optional[List[Agent]] = None) -> str\n")),(0,r.kt)("p",null,"Return the floating system prompt selecting the next speaker. This is always the ",(0,r.kt)("em",{parentName:"p"},"last")," message in the context."),(0,r.kt)("h4",{id:"manual_select_speaker"},"manual","_","select","_","speaker"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def manual_select_speaker(\n        agents: Optional[List[Agent]] = None) -> Union[Agent, None]\n")),(0,r.kt)("p",null,"Manually select the next speaker."),(0,r.kt)("h4",{id:"select_speaker"},"select","_","speaker"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def select_speaker(last_speaker: Agent, selector: ConversableAgent)\n")),(0,r.kt)("p",null,"Select the next speaker."),(0,r.kt)("h4",{id:"a_select_speaker"},"a","_","select","_","speaker"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def a_select_speaker(last_speaker: Agent, selector: ConversableAgent)\n")),(0,r.kt)("p",null,"Select the next speaker."),(0,r.kt)("h2",{id:"groupchatmanager-objects"},"GroupChatManager Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class GroupChatManager(ConversableAgent)\n")),(0,r.kt)("p",null,"(In preview) A chat manager agent that can manage a group chat of multiple agents."),(0,r.kt)("h4",{id:"run_chat"},"run","_","chat"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def run_chat(messages: Optional[List[Dict]] = None,\n             sender: Optional[Agent] = None,\n             config: Optional[GroupChat] = None) -> Union[str, Dict, None]\n")),(0,r.kt)("p",null,"Run a group chat."),(0,r.kt)("h4",{id:"a_run_chat"},"a","_","run","_","chat"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def a_run_chat(messages: Optional[List[Dict]] = None,\n                     sender: Optional[Agent] = None,\n                     config: Optional[GroupChat] = None)\n")),(0,r.kt)("p",null,"Run a group chat asynchronously."))}i.isMDXComponent=!0}}]);